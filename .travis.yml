cache: yarn
stages:
  - name: test
    if: type = pull_request AND tag IS blank
  - name: deploy
    if: branch = master AND head_branch IS blank
install:
  - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
  - nvm install 12
  - npm install -g yarn
  - yarn install
  - yarn global add lerna@^3.18.5
  - yarn --silent --non-interactive --ignore-scripts
jobs:
  include:
  - stage: test
    language: node_js
    node_js: '12'
    script:
      - yarn prepare || travis_terminate 1
      - yarn prepare:fscodestyle || travis_terminate 1
      - yarn lint || travis_terminate 1
      - yarn test --coverage --ci && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js || travis_terminate 1
      - yarn build:storybook || travis_terminate 1
      - commitlint-travis
  - stage: test
    language: generic
    sudo: true
    dist: trusty
    os: linux
    language: android
    jdk: openjdk8
    android:
      components:
        # Adds Android API 22 and emulator image to android image
        # https://docs.travis-ci.com/user/languages/android/#how-to-install-android-sdk-components
        - android-22
        - extra
        - sys-img-armeabi-v7a-android-22
    before_install:
      - rvm install 2.6.0
      - touch $HOME/.android/repositories.cfg
      - yes | sdkmanager "platforms;android-31"
      - yes | sdkmanager "build-tools;33.0.0"
      - yes | sdkmanager "ndk-bundle"
      - cp $ANDROID_HOME/build-tools/33.0.0/d8 $ANDROID_HOME/build-tools/33.0.0/dx
      - cp $ANDROID_HOME/build-tools/33.0.0/lib/d8.jar $ANDROID_HOME/build-tools/33.0.0/lib/dx.jar
      - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a -c 100M
      - emulator -avd test -no-audio -no-window &
      - android-wait-for-emulator
      - adb shell input keyevent 82 &
    script:
      - while sleep 540; do echo "=====[ $SECONDS seconds still running ]====="; done &
      - yarn prepare
      - yarn ship:init
      - yarn ship:compile-android
  - stage: test
    language: objective-c
    os: osx
    osx_image: xcode12
    script:
    - yarn prepare
    - pod repo update
    - yarn ship:init
    - yarn ship:compile-ios
  - stage: deploy
    git:
      depth: false
    before_install: npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN} -q
    script:
      - yarn prepare
      - yarn docs
    deploy:
      provider: pages
      skip-cleanup: true
      github-token: "$GITHUB_TOKEN"
      local-dir: docs/
      on:
        branch: master
